# Depth prediction small_camera

data:
  input_id: "in_grid_3d[0,1,2,3,4,5,6,7]"
  target_id: "out_grid_3d[0,1,2,3,4,5,6,7]"
  # target_clip_min: 0.0
  # target_clip_max: 20.0
  # target_image_size: [1, 256]
  # obs_levels_to_use: "1,2"
  subvolume_slice_x: "0,16"
  subvolume_slice_y: "0,16"
  subvolume_slice_z: "0,16"
  normalize_input: true
  normalize_target: true

io:
  # debug_numerics: true
  # debug_queues: true
  debug_summary: true
  image_summary: true
  image_summary_reduction: ["none", "none", "sum"]
  image_summary_tile_multiples: [5, 5]

model:
  modules:
    -
      type: conv3d_module
      options:
        activation_fn: relu
        add_bias: false
        dropout_rate: 0.5
        filter_increase_per_block: 0
        filter_increase_within_block: 8
        initial_num_filters: 12
        max_num_blocks: -1
        max_output_grid_size: 4
        maxpool_after_each_block: true
        num_convs_per_block: 4
        use_batch_norm: true

      type: upsampling3d_module
      options:
        activation_fn: relu
        num_convs_per_block: 2
        use_batch_norm: true
        filter_decrease_per_block: 0
        filter_decrease_within_block: 8
        # filter_decrease_within_block: 16

  loss:
    type: l1_norm
    reduce_mode: "mean"
    regularization_mode: "l2_norm"
    regularization_lambda: 1e-2

